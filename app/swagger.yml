---
swagger: '2.0'
info:
  title: Robot navigation API
  version: 0.0.1
basePath: /dev
consumes:
  - application/json
produces:
  - application/json
paths:
  /ping:
    get:
      summary: Test API point
      description: Returns 'pong' at success
      produces:
        - html/text
      responses:
        200:
          description: Successful operation
  /location:
    post:
      description: |
        Save path to db
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/location'
      responses:
        200:
          description: Successful operation

  /location/batch_save:
    post:
      description: |
        Save locations to db
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/locations'

      responses:
        200:
          description: Successful operation
  /location/{location_name}:
    get:
      parameters:
        - name: location_name
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful operation
  /dynamo:
    get:
      description: Get table content
      responses:
        200:
          description: Successful operation

  /location/upload:
    post:
      summary: Uploads a json file.
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: The file to upload.
      responses:
        200:
          description: Successful operation

  /path:
    post:
      description: |
        Save path to db
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/path'
      responses:
        200:
          description: Successful operation

definitions:
  path:
    type: object
    required: [path_dest, path]
    properties:
      path_dest:
        type: string
      path:
        type: array
        minItems: 1
        items:
          type: object
          required: [azimuth, dist]
          properties:
            azimuth:
              type: number
              description: Angle of rotation
              minimum: 0
              maximum: 360
              example: 180
            dist:
              type: number
              description: Distance
              example: 56
              minimum: 0







  locations:
    type: array
    example: [{"name": "test", "x": 12, "y": 34}, {"name": "fcsdasdasd", "x": 12, "y": 34}]
    minItems: 1
    items:
      type: object
      required: [name, x, y]
      properties:
        name:
          type: string
          example: test
        x:
          type: number
          example: 56
          minimum: 0
        y:
          type: number
          example: 45.78
          minimum: 0


  location:
    type: object
    required: [name, x, y]
    properties:
      name:
        type: string
        example: test
      x:
        type: number
        example: 56
        minimum: 0
      y:
        type: number
        example: 45.78
        minimum: 0







